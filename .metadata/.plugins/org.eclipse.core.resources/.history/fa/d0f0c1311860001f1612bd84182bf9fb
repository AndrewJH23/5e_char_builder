package com.example.Controllers;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.*;
import com.example.demo.CharacterSheet;

@RestController
@RequestMapping("api/v1/charSheet")
public class GetController {
	@Autowired
	private CharRepo repo;
	
	@GetMapping("/")
	public List<CharacterSheet> getAll(){
		return repo.findAll();
	}
	
	@GetMapping("/{id}")
	public CharacterSheet getSkills(@PathVariable int id) {
		Optional<CharacterSheet> person = repo.findById(id);
		if(person.isPresent()) {
			return person.get();
		}
		return new CharacterSheet();	
	}
	
	@GetMapping("/stats/{id}/{stat}")
	public int getStat(@PathVariable int id,@RequestParam String stat) {
		Optional<CharacterSheet> person = repo.findById(id);
		if(!person.isPresent()) {
			return -101;
		}
		switch(stat) {
		case "Charisma": return person.get().getStats().getCharisma();
		case "Constitution": return person.get().getStats().getConstitution();
		case "Dexterity": return person.get().getStats().getDexterity();
		case "Intelligence": return person.get().getStats().getIntelligence();
		case "person": return person.get().getStats().getStrength();
		case "Wisdom": return person.get().getStats().getWisdom();
		}
		return -100;	
	}
	
	@GetMapping("/skills/{id}/{skill}")
	public int getSkill(@PathVariable int id, @RequestBody String skill) {
		Optional<CharacterSheet> person = repo.findById(id);
		if(!person.isPresent()) {
			return -99;
		}
		
		switch(skill) {
		case "Acrobatics":  return person.get().getSkills().getAcrobatics();
		case "AnimalHandling": return person.get().getSkills().getAnimalHandling();
		case "Arcana": return person.get().getSkills().getArcana();
		case "Athletics": return person.get().getSkills().getAthletics();
		case "Deception": return person.get().getSkills().getDeception();
		case "History": return person.get().getSkills().getHistory();
		case "Insight": return person.get().getSkills().getInsight();
		case "Intimidation": return person.get().getSkills().getIntimidation();
		case "Investigation": return person.get().getSkills().getInvestigation();
		case "Medicine": return person.get().getSkills().getMedicine();
		case "Nature": return person.get().getSkills().getNature();
		case "Perception": return person.get().getSkills().getPerception();
		case "Performance": return person.get().getSkills().getPerformance();
		case "Persuasion": return person.get().getSkills().getPersuasion();
		case "Religion": return person.get().getSkills().getReligion();
		case "SleightOfHand": return person.get().getSkills().getSleightOfHand();
		case "Stealth": return person.get().getSkills().getStealth();
		case "Survival": return person.get().getSkills().getSurvival();		
		}
		return -98;
	}
}
